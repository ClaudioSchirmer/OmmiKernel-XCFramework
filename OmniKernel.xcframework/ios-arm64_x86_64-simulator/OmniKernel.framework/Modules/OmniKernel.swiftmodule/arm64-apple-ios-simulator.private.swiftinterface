// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OmniKernel
import Foundation
@_exported import OmniKernel
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct OmniResponse {
  public let statusCode: Swift.Int
  public func successfullyReceived() -> Swift.Bool
  public func getBodyAsString() throws -> Swift.String
  public func decode<T>() throws -> T where T : Swift.Decodable
}
public struct OmniClient {
  public init(scheme: OmniKernel.OmniClientScheme, host: Swift.String, defaultPath: Swift.String? = nil)
  public mutating func addDefaultQueryParameter(key: Swift.String, value: Swift.String)
  public mutating func addDefaultHeader(key: Swift.String, value: Swift.String)
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func get(path: Swift.String? = nil, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func post(path: Swift.String? = nil, body: Swift.String, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func postJson(path: Swift.String? = nil, body: any Swift.Encodable, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func put(path: Swift.String? = nil, body: Swift.String, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func putJson(path: Swift.String? = nil, body: any Swift.Encodable, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public mutating func delete(path: Swift.String? = nil, body: (any Swift.Encodable)? = nil, additionalQueryParameters: [Swift.String : Swift.String] = [:], additionalHeaders: [Swift.String : Swift.String] = [:]) async throws -> OmniKernel.OmniResponse
  #endif
}
public enum OmniClientScheme : Swift.String {
  case Http
  case Https
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum OmniResponseError : Swift.String, Swift.Error {
  case JSONDecoderError
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum OmniClientMethod : Swift.String {
  case Get
  case Post
  case Put
  case Delete
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum OmniResult<Success, Failure> where Failure : Swift.Error {
  case success(Success)
  case failure(Failure)
}
public enum OmniClientError : Swift.String, Swift.Error {
  case URLEncodedError
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension OmniKernel.OmniClientScheme : Swift.Equatable {}
extension OmniKernel.OmniClientScheme : Swift.Hashable {}
extension OmniKernel.OmniClientScheme : Swift.RawRepresentable {}
extension OmniKernel.OmniResponseError : Swift.Equatable {}
extension OmniKernel.OmniResponseError : Swift.Hashable {}
extension OmniKernel.OmniResponseError : Swift.RawRepresentable {}
extension OmniKernel.OmniClientMethod : Swift.Equatable {}
extension OmniKernel.OmniClientMethod : Swift.Hashable {}
extension OmniKernel.OmniClientMethod : Swift.RawRepresentable {}
extension OmniKernel.OmniClientError : Swift.Equatable {}
extension OmniKernel.OmniClientError : Swift.Hashable {}
extension OmniKernel.OmniClientError : Swift.RawRepresentable {}
